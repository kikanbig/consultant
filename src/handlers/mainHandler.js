const { getProductsByCategory } = require('../data/products');
const { generateResponse, extractIntent } = require('../utils/responseGenerator');

// –°–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
const SESSION_STATES = {
  START: 'start',
  CATEGORY_SELECTION: 'category_selection',
  PRODUCT_INFO: 'product_info',
  CONSULTATION: 'consultation'
};

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
async function handleRequest(body) {
  const { request, session, version } = body;
  
  // –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è
  if (session.new) {
    return handleNewSession();
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
  const intent = extractIntent(request.command);
  const sessionState = session.session_id ? SESSION_STATES.START : SESSION_STATES.START;
  
  console.log(`Intent: ${intent}, State: ${sessionState}`);
  
  switch (intent) {
    case 'help':
      return generateHelpResponse();
    
    case 'category_info':
      return handleCategoryInfo(request.command);
    
    case 'detailed_info':
      return handleDetailedInfo(request.command);
    
    case 'specific_product':
      return handleSpecificProduct(request.command);
    
    case 'product_search':
      return handleProductSearch(request.command);
    
    case 'promotions':
      return handlePromotions();
    
    case 'consultation':
      return handleConsultation();
    
    case 'goodbye':
      return generateGoodbyeResponse();
    
    default:
      return handleDefaultResponse(request.command);
  }
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
function handleNewSession() {
  return generateResponse(
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∑–∞–ª–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–≤–∞–¥—Ü–∞—Ç—å –ø–µ—Ä–≤—ã–π –≤–µ–∫ –¥–æ–º, –ø–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –º–µ–±–µ–ª—å –∏ —É–∑–Ω–∞—Ç—å –æ —Ç–æ–≤–∞—Ä–∞—Ö. " +
    "–ú–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ('—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –¥–∏–≤–∞–Ω—ã'), –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å ('–¥–∏–≤–∞–Ω –ö–æ–º—Ñ–æ—Ä—Ç'), " +
    "–∞–∫—Ü–∏–∏ ('–∫–∞–∫–∏–µ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∏') –∏–ª–∏ –ø–æ–∑–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞. –ö–æ–º–∞–Ω–¥—ã '–ø–æ–º–æ—â—å' –∏ '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å' –ø–æ–∫–∞–∂—É—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.",
    false,
    {
      buttons: [
        { title: "–î–∏–≤–∞–Ω—ã", hide: true },
        { title: "–î–∏–≤–∞–Ω –ö–æ–º—Ñ–æ—Ä—Ç", hide: true },
        { title: "–ê–∫—Ü–∏–∏", hide: true },
        { title: "–ü–æ–º–æ—â—å", hide: true }
      ]
    }
  );
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
function handleCategoryInfo(command) {
  const category = extractCategory(command);
  
  if (!category) {
    return generateResponse(
      "–ö–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –£ –Ω–∞—Å –µ—Å—Ç—å –¥–∏–≤–∞–Ω—ã, –∫—Ä–æ–≤–∞—Ç–∏, —à–∫–∞—Ñ—ã, —Å—Ç–æ–ª—ã, –∫—Ä–µ—Å–ª–∞ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.",
      false,
      {
        buttons: [
          { title: "–î–∏–≤–∞–Ω—ã", hide: true },
          { title: "–ö—Ä–æ–≤–∞—Ç–∏", hide: true },
          { title: "–®–∫–∞—Ñ—ã", hide: true },
          { title: "–°—Ç–æ–ª—ã", hide: true }
        ]
      }
    );
  }
  
  const products = getProductsByCategory(category);
  
  if (products.length === 0) {
    return generateResponse(
      `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}" –ø–æ–∫–∞ –Ω–µ—Ç. –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –¥–∏–≤–∞–Ω—ã, –∫—Ä–æ–≤–∞—Ç–∏, —à–∫–∞—Ñ—ã –∏–ª–∏ —Å—Ç–æ–ª—ã.`,
      false
    );
  }
  
  const categoryInfo = generateCategoryDescription(category, products);
  
  return generateResponse(
    categoryInfo,
    false,
    {
      buttons: [
        { title: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ", hide: true },
        { title: "–¶–µ–Ω—ã", hide: true },
        { title: "–î—Ä—É–≥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è", hide: true },
        { title: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", hide: true }
      ]
    }
  );
}

// –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function handleDetailedInfo(command) {
  const category = extractCategory(command);
  
  if (!category) {
    return generateResponse(
      "–û –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏? –°–∫–∞–∂–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –¥–∏–≤–∞–Ω–∞—Ö' –∏–ª–∏ '–≤—Å–µ –º–æ–¥–µ–ª–∏ –∫—Ä–æ–≤–∞—Ç–µ–π'.",
      false,
      {
        buttons: [
          { title: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –¥–∏–≤–∞–Ω–∞—Ö", hide: true },
          { title: "–í—Å–µ –º–æ–¥–µ–ª–∏ –∫—Ä–æ–≤–∞—Ç–µ–π", hide: true },
          { title: "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å—Ç–æ–ª–æ–≤", hide: true }
        ]
      }
    );
  }
  
  const products = getProductsByCategory(category);
  
  if (products.length === 0) {
    return generateResponse(
      `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}" –ø–æ–∫–∞ –Ω–µ—Ç.`,
      false
    );
  }
  
  const detailedInfo = generateDetailedCategoryDescription(category, products);
  
  return generateResponse(
    detailedInfo,
    false,
    {
      buttons: [
        { title: "–ê–∫—Ü–∏–∏", hide: true },
        { title: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", hide: true },
        { title: "–î—Ä—É–≥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è", hide: true }
      ]
    }
  );
}

// –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞/–º–æ–¥–µ–ª–∏
function handleSpecificProduct(command) {
  const { searchProducts } = require('../data/products');
  
  // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–ª–æ–≤–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞
  const cleanQuery = command
    .replace(/—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ|–ø–æ–∫–∞–∂–∏|–Ω—É–∂–µ–Ω|–Ω—É–∂–Ω–∞|—Ö–æ—á—É|–¥–∏–≤–∞–Ω|–∫—Ä–æ–≤–∞—Ç—å|—à–∫–∞—Ñ|—Å—Ç–æ–ª/gi, '')
    .trim();
  
  if (cleanQuery.length < 2) {
    return generateResponse(
      "–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫—É—é –º–æ–¥–µ–ª—å –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É —Ç–æ–≤–∞—Ä–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? " +
      "–ù–∞–ø—Ä–∏–º–µ—Ä: '–î–∏–≤–∞–Ω –ö–æ–º—Ñ–æ—Ä—Ç', '—É–≥–ª–æ–≤–æ–π –¥–∏–≤–∞–Ω', '–∫—Ä–æ–≤–∞—Ç—å –ú–µ—á—Ç–∞' –∏–ª–∏ '—Ä–∞—Å–∫–ª–∞–¥–Ω–æ–π –¥–∏–≤–∞–Ω'.",
      false,
      {
        buttons: [
          { title: "–î–∏–≤–∞–Ω –ö–æ–º—Ñ–æ—Ä—Ç", hide: true },
          { title: "–£–≥–ª–æ–≤–æ–π –¥–∏–≤–∞–Ω", hide: true },
          { title: "–ö—Ä–æ–≤–∞—Ç—å –ú–µ—á—Ç–∞", hide: true },
          { title: "–í—Å–µ –º–æ–¥–µ–ª–∏", hide: true }
        ]
      }
    );
  }
  
  const foundProducts = searchProducts(cleanQuery);
  
  if (foundProducts.length === 0) {
    return generateResponse(
      `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞—à–µ–ª —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É "${cleanQuery}". ` +
      "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –º–æ–¥–µ–ª–∏, —Ü–≤–µ—Ç—É –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–µ. " +
      "–ò–ª–∏ —Å–∫–∞–∂–∏—Ç–µ '–≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–∏–≤–∞–Ω–æ–≤' –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.",
      false,
      {
        buttons: [
          { title: "–í—Å–µ –º–æ–¥–µ–ª–∏ –¥–∏–≤–∞–Ω–æ–≤", hide: true },
          { title: "–í—Å–µ –∫—Ä–æ–≤–∞—Ç–∏", hide: true },
          { title: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", hide: true }
        ]
      }
    );
  }
  
  if (foundProducts.length === 1) {
    // –ù–∞—à–ª–∏ —Ç–æ—á–Ω–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ
    const product = foundProducts[0];
    const productInfo = generateSingleProductDescription(product);
    
    return generateResponse(
      productInfo,
      false,
      {
        buttons: [
          { title: "–ê–∫—Ü–∏–∏", hide: true },
          { title: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", hide: true },
          { title: "–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã", hide: true }
        ]
      }
    );
  }
  
  // –ù–∞—à–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
  const productsList = foundProducts.slice(0, 3).map((product, index) => 
    `${index + 1}. ${product.name} - ${product.price.toLocaleString()}‚ÇΩ`
  ).join('\n');
  
  let response = `–ù–∞—à–µ–ª ${foundProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:\n\n${productsList}`;
  
  if (foundProducts.length > 3) {
    response += `\n\n–ò –µ—â–µ ${foundProducts.length - 3} –º–æ–¥–µ–ª–µ–π.`;
  }
  
  response += "\n\n–£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.";
  
  return generateResponse(
    response,
    false,
    {
      buttons: foundProducts.slice(0, 3).map(product => ({
        title: product.name.replace(/[""]/g, ''),
        hide: true
      }))
    }
  );
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
function generateSingleProductDescription(product) {
  let description = `üõãÔ∏è ${product.name}\n\n`;
  description += `üí∞ –¶–µ–Ω–∞: ${product.price.toLocaleString()}‚ÇΩ\n\n`;
  description += `üìù ${product.description}\n\n`;
  description += `üìè –†–∞–∑–º–µ—Ä—ã: ${product.dimensions}\n`;
  description += `üßµ –ú–∞—Ç–µ—Ä–∏–∞–ª: ${product.material}\n`;
  
  if (product.colors && product.colors.length > 0) {
    description += `üé® –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞: ${product.colors.join(', ')}\n`;
  }
  
  if (product.features && product.features.length > 0) {
    description += `‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: ${product.features.join(', ')}\n`;
  }
  
  if (product.promotions && product.promotions.length > 0) {
    description += `üî• –î–µ–π—Å—Ç–≤—É—é—â–∏–µ –∞–∫—Ü–∏–∏: ${product.promotions.join(', ')}\n`;
  }
  
  description += `\nüìã –¢–æ–≤–∞—Ä ${product.inStock ? '–µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏' : '–ø–æ–¥ –∑–∞–∫–∞–∑'}.`;
  
  return description;
}

// –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
function handleProductSearch(command) {
  // –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
  return generateResponse(
    "–î–∞–≤–∞–π—Ç–µ –ø–æ–¥–±–µ—Ä–µ–º —Ç–æ–≤–∞—Ä –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏. –ö–∞–∫–∏–µ —É –≤–∞—Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ä–∞–∑–º–µ—Ä—É, —Ü–≤–µ—Ç—É –∏–ª–∏ —Å—Ç–∏–ª—é?",
    false,
    {
      buttons: [
        { title: "–ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–∑–º–µ—Ä", hide: true },
        { title: "–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä", hide: true },
        { title: "–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä", hide: true }
      ]
    }
  );
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫—Ü–∏—è—Ö
function handlePromotions() {
  return generateResponse(
    "–°–µ–π—á–∞—Å —É –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É—é—Ç –æ—Ç–ª–∏—á–Ω—ã–µ –∞–∫—Ü–∏–∏! —Å–∫–∏–¥–∫–∏ –¥–æ 30% –Ω–∞ –¥–∏–≤–∞–Ω—ã, " +
    "–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –æ—Ç 50 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π, –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –±–µ–∑ –ø–µ—Ä–µ–ø–ª–∞—Ç. " +
    "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?",
    false,
    {
      buttons: [
        { title: "–°–∫–∏–¥–∫–∏ –Ω–∞ –¥–∏–≤–∞–Ω—ã", hide: true },
        { title: "–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏", hide: true },
        { title: "–†–∞—Å—Å—Ä–æ—á–∫–∞", hide: true }
      ]
    }
  );
}

// –í—ã–∑–æ–≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
function handleConsultation() {
  return generateResponse(
    "–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É! –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∑–∞–ª–µ. " +
    "–ò—â–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö —Ñ—É—Ç–±–æ–ª–∫–∞—Ö –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ –≤—Ö–æ–¥–µ. " +
    "–û–Ω–∏ –ø–æ–º–æ–≥—É—Ç —Å –≤—ã–±–æ—Ä–æ–º –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.",
    false,
    {
      buttons: [
        { title: "–°–ø–∞—Å–∏–±–æ", hide: true },
        { title: "–ï—â—ë –≤–æ–ø—Ä–æ—Å—ã", hide: true }
      ]
    }
  );
}

// –°–ø—Ä–∞–≤–∫–∞
function generateHelpResponse() {
  return generateResponse(
    "–Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∑–∞–ª–∞. –£–º–µ—é:\n" +
    "‚Ä¢ –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: '—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –¥–∏–≤–∞–Ω—ã', '–∫–∞–∫–∏–µ –µ—Å—Ç—å –∫—Ä–æ–≤–∞—Ç–∏'\n" +
    "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ —Å–ø–∏—Å–∫–∏: '–≤—Å–µ –º–æ–¥–µ–ª–∏ –¥–∏–≤–∞–Ω–æ–≤', '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—Ä–æ–≤–∞—Ç—è—Ö'\n" +
    "‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã: '–¥–∏–≤–∞–Ω –ö–æ–º—Ñ–æ—Ä—Ç', '—É–≥–ª–æ–≤–æ–π –¥–∏–≤–∞–Ω', '–∫—Ä–æ–≤–∞—Ç—å –ú–µ—á—Ç–∞'\n" +
    "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫—Ü–∏—è—Ö: '–∫–∞–∫–∏–µ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∏', '–µ—Å—Ç—å –ª–∏ –∞–∫—Ü–∏–∏'\n" +
    "‚Ä¢ –í—ã–∑–æ–≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞: '–Ω—É–∂–µ–Ω –ø—Ä–æ–¥–∞–≤–µ—Ü', '–ø–æ–∑–æ–≤–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞'\n" +
    "–î–æ—Å—Ç—É–ø–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: –¥–∏–≤–∞–Ω—ã, –∫—Ä–æ–≤–∞—Ç–∏, —à–∫–∞—Ñ—ã, —Å—Ç–æ–ª—ã, –∫—Ä–µ—Å–ª–∞.",
    false,
    {
      buttons: [
        { title: "–î–∏–≤–∞–Ω—ã", hide: true },
        { title: "–ê–∫—Ü–∏–∏", hide: true },
        { title: "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", hide: true }
      ]
    }
  );
}

// –ü—Ä–æ—â–∞–Ω–∏–µ
function generateGoodbyeResponse() {
  return generateResponse(
    "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞! –£–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!",
    true
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
function handleDefaultResponse(command) {
  return generateResponse(
    "–Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤, –∞–∫—Ü–∏–∏ –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞. " +
    "–°–∫–∞–∂–∏—Ç–µ '–ø–æ–º–æ—â—å', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.",
    false,
    {
      buttons: [
        { title: "–ü–æ–º–æ—â—å", hide: true },
        { title: "–¢–æ–≤–∞—Ä—ã", hide: true },
        { title: "–ê–∫—Ü–∏–∏", hide: true }
      ]
    }
  );
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
function extractCategory(command) {
  const categories = {
    '–¥–∏–≤–∞–Ω': 'sofas',
    '–∫—Ä–æ–≤–∞—Ç—å': 'beds', 
    '—à–∫–∞—Ñ': 'wardrobes',
    '—Å—Ç–æ–ª': 'tables',
    '–∫—Ä–µ—Å–ª–æ': 'chairs',
    '–∫–æ–º–æ–¥': 'dressers'
  };
  
  const lowerCommand = command.toLowerCase();
  
  for (const [keyword, category] of Object.entries(categories)) {
    if (lowerCommand.includes(keyword)) {
      return category;
    }
  }
  
  return null;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function generateCategoryDescription(category, products) {
  const descriptions = {
    'sofas': `–£ –Ω–∞—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã ${products.length} –º–æ–¥–µ–ª–µ–π –¥–∏–≤–∞–Ω–æ–≤: —É–≥–ª–æ–≤—ã–µ, –ø—Ä—è–º—ã–µ –∏ –º–æ–¥—É–ª—å–Ω—ã–µ. ` +
             '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ–±–∏–≤–∫–∏: —Ç–∫–∞–Ω—å, —ç–∫–æ–∫–æ–∂–∞, –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –∫–æ–∂–∞. –ï—Å—Ç—å –º–æ–¥–µ–ª–∏ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π "–∫–ª–∏–∫-–∫–ª—è–∫" –∏ –æ—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∏–º–∏ –º–∞—Ç—Ä–∞—Å–∞–º–∏.',
    
    'beds': `–í –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ ${products.length} –º–æ–¥–µ–ª–µ–π –∫—Ä–æ–≤–∞—Ç–µ–π —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤. ` +
            '–û–¥–Ω–æ—Å–ø–∞–ª—å–Ω—ã–µ, –ø–æ–ª—É—Ç–æ—Ä–Ω—ã–µ, –¥–≤—É—Å–ø–∞–ª—å–Ω—ã–µ –∏ king-size. –° –ø–æ–¥—ä–µ–º–Ω—ã–º –º–µ—Ö–∞–Ω–∏–∑–º–æ–º –∏ –±–µ–∑, —Å –º—è–≥–∫–∏–º –∏–∑–≥–æ–ª–æ–≤—å–µ–º.',
    
    'wardrobes': `–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º ${products.length} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —à–∫–∞—Ñ–æ–≤: —Ä–∞—Å–ø–∞—à–Ω—ã–µ, –∫—É–ø–µ –∏ –º–æ–¥—É–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã. ` +
                 '–î–≤—É—Ö-, —Ç—Ä–µ—Ö- –∏ —á–µ—Ç—ã—Ä–µ—Ö–¥–≤–µ—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏. –í–æ–∑–º–æ–∂–Ω–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏.',
    
    'tables': `–£ –Ω–∞—Å ${products.length} –º–æ–¥–µ–ª–µ–π —Å—Ç–æ–ª–æ–≤: –æ–±–µ–¥–µ–Ω–Ω—ã–µ, –∂—É—Ä–Ω–∞–ª—å–Ω—ã–µ, –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏ —Ç—É–∞–ª–µ—Ç–Ω—ã–µ. ` +
              '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã: –¥–µ—Ä–µ–≤–æ, —Å—Ç–µ–∫–ª–æ, –º–µ—Ç–∞–ª–ª. –†–∞–∑–¥–≤–∏–∂–Ω—ã–µ –∏ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.'
  };
  
  return descriptions[category] || `–î–æ—Å—Ç—É–ø–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.`;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function generateDetailedCategoryDescription(category, products) {
  if (products.length === 0) return "–¢–æ–≤–∞—Ä—ã –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.";
  
  let description = `–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${getCategoryName(category)} –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤:\n\n`;
  
  products.slice(0, 3).forEach((product, index) => {
    description += `${index + 1}. ${product.name}\n`;
    description += `   –¶–µ–Ω–∞: ${product.price.toLocaleString()}‚ÇΩ\n`;
    description += `   ${product.description}\n`;
    description += `   –†–∞–∑–º–µ—Ä—ã: ${product.dimensions}\n`;
    description += `   –ú–∞—Ç–µ—Ä–∏–∞–ª: ${product.material}\n`;
    if (product.colors.length > 0) {
      description += `   –¶–≤–µ—Ç–∞: ${product.colors.join(', ')}\n`;
    }
    if (product.features.length > 0) {
      description += `   –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: ${product.features.join(', ')}\n`;
    }
    if (product.promotions.length > 0) {
      description += `   üî• –ê–∫—Ü–∏—è: ${product.promotions.join(', ')}\n`;
    }
    description += '\n';
  });
  
  if (products.length > 3) {
    description += `–ò –µ—â–µ ${products.length - 3} –º–æ–¥–µ–ª–µ–π. –°–ø—Ä–æ—Å–∏—Ç–µ –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É.`;
  }
  
  return description;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getCategoryName(category) {
  const names = {
    'sofas': '–î–∏–≤–∞–Ω—ã',
    'beds': '–ö—Ä–æ–≤–∞—Ç–∏',
    'wardrobes': '–®–∫–∞—Ñ—ã',
    'tables': '–°—Ç–æ–ª—ã',
    'chairs': '–ö—Ä–µ—Å–ª–∞',
    'dressers': '–ö–æ–º–æ–¥—ã'
  };
  return names[category] || category;
}

module.exports = {
  handleRequest
}; 